# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "600"
default_platform(:ios)

platform :ios do
 desc "Runs `pod install`"
  puts "Runs `pod install`"
  lane :pod_install do
    cocoapods(
      clean_install: true,
      podfile: "./Podfile"
    )
  end

  desc "Run swift code validation using SwiftLint"
  puts "Run swift code validation using SwiftLint"
  lane :lint do
    swiftlint(
      mode: :lint,
      ignore_exit_status: true,
      raise_if_swiftlint_error: true,
      executable: "./Pods/SwiftLint/swiftlint"
    )
  end

  lane:unit_Test do 
  run_tests(
     workspace: "MarketApp.xcworkspace",
      scheme: "MarketApp",
      devices: ["iPhone 13"],
      reinstall_app: true,
      app_identifier: "com.shoping.MarketApps",
      clean: true)

slack(
      username: "로이",
      message: "Unit test  성공",
      slack_url: "https://hooks.slack.com/services/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"
    )

# ✅ 에러 처리.
error do |lane, exception, options|
    slack(
      message: "에러 발생 : #{exception}",
      success: false,
      slack_url: "https://hooks.slack.com/services/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"
    )
     end
   end



 desc "Install Profiles and Build My App"
  lane :build_ipa do
   clear_derived_data
    gym(
      configuration: "Release",
      workspace: "MarketApp.xcworkspace",
      scheme: "MarketApp",
      output_name: "Affinity",
      export_method: "app-store",
      include_bitcode: false,
      clean: true,
      silent: true,
      include_symbols: false,
      xcargs: 'DEBUG_INFORMATION_FORMAT="dwarf-with-dsym"',
      disable_package_automatic_updates: true,
      skip_package_ipa: false,
      skip_package_dependencies_resolution: true,
      skip_package_pkg: true,
 	    export_options: { signingStyle: "automatic" },
        export_options: {
        compileBitcode: false,
         export_options: {
          provisioningProfiles: {
            "com.example.bundleid" => "Provisioning Profile Name",
            "com.example.bundleid2" => "Provisioning Profile Name 2"
             }
           }
         }
       )
      end

  desc "Description of what the lane does"
   lane :beta do
    get_certificates
    get_provisioning_profile
     lint
     pod_install
    increment_build_number(
        build_number: latest_testflight_build_number + 1
    )
    build_ipa

    upload_to_testflight(skip_waiting_for_build_processing: true)
    slack(
      message: "Testflight 배포에 성공했습니다!",
      slack_url: "https://affinity-x7y8156.slack.com/배포"
    )
  end
end
